plugins {
    id 'de.undercouch.download' version '4.1.2'
    id 'java'
}


apply from: "$rootDir/build.gradle"

group = 'org.ballerinalang'
version = '1.0-SNAPSHOT'

configurations {
    dependency {
        transitive true
    }
}

ext {
    distributionDir = "distribution"
    nbalSourceDir = "nBallerinaSrc"
    fhirSourceDir = "fhirSrc"
}
dependencies {
    implementation 'org.ballerinalang:ballerina-lang'
    implementation 'org.ballerinalang:ballerina-parser'
    implementation 'org.ballerinalang:language-server-core'
    implementation 'org.ballerinalang:ballerina-tools-api'
    implementation 'org.ballerinalang:language-server-commons'
    implementation 'org.ballerinalang:ballerina-test-utils'

    implementation('org.eclipse.lsp4j:org.eclipse.lsp4j') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation('org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc') {
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation 'org.slf4j:slf4j-jdk14'
    implementation "com.google.code.gson:gson"

}

task downloadBallerinaDistribution(type: Download) {
    src "https://github.com/ballerina-platform/ballerina-distribution/releases/download/v2201.7.0/ballerina-2201.7.0-swan-lake.zip"
    onlyIfModified true
    dest new File("${buildDir}/ballerina-${ballerinaLangVersion}-swan-lake.zip")
}

task unpackBallerinaDistribution(type: Copy) {
    dependsOn downloadBallerinaDistribution
    def sourceDir = "${buildDir}/${distributionDir}"
    from zipTree { "${buildDir}/ballerina-${ballerinaLangVersion}-swan-lake.zip" }
    new File("${sourceDir}").mkdirs()
    into new File("${sourceDir}")
}

task copyPackages() {
    def sourceDir = "${buildDir}/${distributionDir}" +
            "/ballerina-${ballerinaLangVersion}-swan-lake/distributions/ballerina-${ballerinaLangVersion}/repo"
    copy {
        from "${sourceDir}"
        into "${buildDir}/repo"
    }
}

task downloadBalTestProject(type: Download) {
    // Download nBallerina latest tag
    src "https://github.com/ballerina-platform/nballerina/archive/refs/heads/main.zip"
    onlyIfModified true
    dest new File("${buildDir}/nballeirna-src.zip")
}


task downloadBalFHIRTestProject(type: Download) {
    // Download nBallerina latest tag
    src "https://github.com/ballerina-platform/module-ballerinax-health.fhir.r4/archive/refs/tags/uscore-v1.0.5.zip"
    onlyIfModified true
    dest new File("${buildDir}/fhir-src.zip")
}

task unpackBalTestProject(type: Copy) {
    dependsOn downloadBalTestProject
    def sourceDir = "${buildDir}/${nbalSourceDir}"
    from zipTree { "${buildDir}/nballeirna-src.zip" }
    new File("${sourceDir}").mkdirs()
    into new File("${sourceDir}")
}

task unpackBalFHIRTestProject(type: Copy) {
    dependsOn downloadBalFHIRTestProject
    def sourceDir = "${buildDir}/${fhirSourceDir}"
    from zipTree { "${buildDir}/fhir-src.zip" }
    new File("${sourceDir}").mkdirs()
    into new File("${sourceDir}")
}

task runLSSimulator(type: JavaExec) {
    dependsOn unpackBallerinaDistribution
    dependsOn copyPackages
    dependsOn unpackBalTestProject

    def extractedBalSrcDir = "${buildDir}/${nbalSourceDir}/nballerina-main/compiler"
    systemProperty "ls.simulation.src", "${extractedBalSrcDir}"

    systemProperty "ballerina.home", "$buildDir/"
    systemProperty "ballerina.version", "${ballerinaLangVersion}"
    systemProperty "ls.simulation.duration", "60"
    systemProperty "ls.simulation.skipGenerators", System.getProperty("ls.simulation.skipGenerators")
    systemProperty "LANG_REPO_BUILD", "false"

    jvmArgs = ['-XX:+HeapDumpOnOutOfMemoryError', "-XX:HeapDumpPath=$rootDir/dump.hprof"]

    maxHeapSize "1536m"
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.ballerinalang.langserver.simulator.EditorSimulator"
}

task runLSSimulatorOnFHIR(type: JavaExec) {
    dependsOn unpackBallerinaDistribution
    dependsOn copyPackages
    dependsOn unpackBalFHIRTestProject

    def extractedBalSrcDir = "${buildDir}/${fhirSourceDir}/module-ballerinax-health.fhir.r4-uscore-v1.0.5/base"
    systemProperty "ls.simulation.src", "${extractedBalSrcDir}"

    systemProperty "ballerina.home", "$buildDir/"
    systemProperty "ballerina.version", "${ballerinaLangVersion}"
    systemProperty "ls.simulation.duration", "60"
    systemProperty "ls.simulation.skipGenerators", System.getProperty("ls.simulation.skipGenerators")
    systemProperty "LANG_REPO_BUILD", "false"

    jvmArgs = ['-XX:+HeapDumpOnOutOfMemoryError', "-XX:HeapDumpPath=$rootDir/dump.hprof"]

    maxHeapSize "1536m"
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = "org.ballerinalang.langserver.simulator.EditorSimulator"
}

tasks.compileJava {
    doFirst {
        options.encoding = 'UTF-8'
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}
